{"version":3,"sources":["utils/api.js","context/MainProvider.jsx","components/_MainInfo/MainInfo.jsx","components/OpenHistoryBtns/OpenHistoryBtns.jsx","components/_page/MainPage.jsx","components/CategoriesList/CategoriesList.jsx","components/_shared/labelInput/labelInput.jsx","components/TransactionForm/TransactionForm.style.js","components/TransactionForm/TransactionForm.jsx","components/_shared/GoBackHeader/GoBackHeader.jsx","components/_page/TransactionPage/TransactionPage.jsx","components/App/App.jsx","index.js","components/_shared/GoBackHeader/GoBackHeader.module.scss"],"names":["axios","defaults","baseURL","postTransaction","endPoint","transaction","a","post","data","getTransactions","get","MainContext","createContext","useMainContext","useContext","MainProvider","children","useState","activePage","setActivePage","costs","setCosts","incomes","setIncomes","id","title","categories","setCategories","error","setError","useEffect","console","log","setTransactions","message","Provider","value","toggleActivePage","addTransaction","dataForm","transType","prevCosts","prevIncomes","addCategory","category","prevCategories","MainInfo","options","btnTitle","openActivePage","onClick","type","map","period","sum","OpenHistoryBtns","MainPage","style","width","margin","costsInfoOptions","incomesInfoOptions","balanceInfoOptions","CategoriesList","state","inputValue","checkedValue","handleChange","e","setState","target","handleSubmit","preventDefault","Date","now","props","handleCheck","this","onChange","name","checked","onSubmit","placeholder","Component","LabelInput","handleClick","className","Form","styled","form","TransactionForm","openCategoriesList","date","time","currency","comment","then","catch","GoBackHeader","handleGoBack","s","header","wrapper","button","TransactionPage","isOpenCategories","setIsOpenCategories","setDataForm","formTitle","prev","App","alert","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.de79fed1.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3004/';\n\nconst postTransaction = async (endPoint, transaction) => {\n  try {\n    const { data } = await axios.post(endPoint, transaction);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst getTransactions = async endPoint => {\n  try {\n    const { data } = await axios.get(endPoint);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport { postTransaction, getTransactions };\n","import { createContext, useContext, useState, useEffect } from 'react';\r\nimport { getTransactions } from '../utils/api';\r\n\r\nconst MainContext = createContext();\r\n\r\nexport const useMainContext = () => useContext(MainContext);\r\n\r\nexport const MainProvider = ({ children }) => {\r\n  const [activePage, setActivePage] = useState('main');\r\n  const [costs, setCosts] = useState([]);\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [categories, setCategories] = useState([\r\n    { id: 'diff', title: 'Разное' },\r\n  ]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const toggleActivePage = (activePage = 'main') => {\r\n    setActivePage(activePage);\r\n  };\r\n\r\n  const addTransaction = ({ dataForm, transType }) => {\r\n    transType === 'costs' && setCosts(prevCosts => [...prevCosts, dataForm]);\r\n    transType === 'incomes' &&\r\n      setIncomes(prevIncomes => [...prevIncomes, dataForm]);\r\n  };\r\n\r\n  const addCategory = category => {\r\n    setCategories(prevCategories => [...prevCategories, category]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect');\r\n    const setTransactions = async () => {\r\n      try {\r\n        const costs = await getTransactions('costs');\r\n        const incomes = await getTransactions('incomes');\r\n        setCosts(costs);\r\n        setIncomes(incomes);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n    setTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <MainContext.Provider\r\n      value={{\r\n        activePage,\r\n        costs,\r\n        incomes,\r\n        categories,\r\n        error,\r\n        setError,\r\n        toggleActivePage,\r\n        addTransaction,\r\n        addCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </MainContext.Provider>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MainInfo = ({title,options,btnTitle,activePage,openActivePage}) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            <p>EUR</p>\r\n            <button onClick={()=>openActivePage(activePage)} type=\"button\">{btnTitle}</button>\r\n            <ul>\r\n                {options.map(({period,sum}) => (\r\n                    <li key={period}>\r\n                    <span>{period}</span>\r\n                    <span>{sum}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\nMainInfo.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      period: PropTypes.string.isRequired,\r\n      sum: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  btnTitle: PropTypes.string.isRequired,\r\n};\r\nexport default MainInfo\r\n","import React from 'react'\r\n\r\nconst OpenHistoryBtns = () => {\r\n    return (\r\n        <>\r\n            <button type='button'>Все расходы</button>\r\n            <button type='button'>Все доходы</button>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpenHistoryBtns\r\n","import React from 'react';\r\nimport MainInfo from '../_MainInfo/MainInfo';\r\nimport OpenHistoryBtns from '../OpenHistoryBtns/OpenHistoryBtns';\r\nimport {\r\n  costsInfoOptions,\r\n  incomesInfoOptions,\r\n  balanceInfoOptions,\r\n} from '../../assets/options/mainInfoOptions.json';\r\nimport { useMainContext } from '../../context/MainProvider';\r\n\r\nexport const MainPage = () => {\r\n  const { toggleActivePage } = useMainContext();\r\n  return (\r\n    <section style={{ width: '400px', margin: '0 auto' }}>\r\n      <h1>Журнал расходов</h1>\r\n      <MainInfo\r\n        btnTitle=\"Add\"\r\n        options={costsInfoOptions}\r\n        title=\"Расходы\"\r\n        openActivePage={toggleActivePage}\r\n        activePage=\"costs\"\r\n      />\r\n      <MainInfo\r\n        btnTitle=\"Add\"\r\n        options={incomesInfoOptions}\r\n        title=\"Доходы\"\r\n        openActivePage={toggleActivePage}\r\n        activePage=\"incomes\"\r\n      />\r\n      <MainInfo\r\n        btnTitle=\"Show\"\r\n        options={balanceInfoOptions}\r\n        title=\"Баланс\"\r\n        openActivePage={toggleActivePage}\r\n        activePage=\"balance\"\r\n      />\r\n      <OpenHistoryBtns />\r\n    </section>\r\n  );\r\n};\r\n","import { Component } from 'react';\r\n\r\nexport default class CategoriesList extends Component {\r\n  state = {\r\n    inputValue: '',\r\n    checkedValue: null,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const id = Date.now();\r\n\r\n    this.props.addCategory({ id, title: this.state.inputValue });\r\n  };\r\n\r\n  handleCheck = e => {\r\n    this.setState({ checkedValue: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue, checkedValue } = this.state;\r\n    const { categories } = this.props;\r\n    return (\r\n      <>\r\n        <h1>CategoriesList</h1>\r\n        {categories.map(({ id, title }) => {\r\n          console.log(id, checkedValue);\r\n          return (\r\n            <label>\r\n              <p> {title}</p>\r\n              <input\r\n                onChange={this.handleCheck}\r\n                type=\"radio\"\r\n                value={id}\r\n                name=\"category\"\r\n                checked={id === +checkedValue}\r\n              />\r\n            </label>\r\n          );\r\n        })}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"новая категория...\"\r\n            onChange={this.handleChange}\r\n            value={inputValue}\r\n          />\r\n          <button type=\"submit\"></button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function LabelInput({\r\n  title,\r\n  type,\r\n  placeholder = null,\r\n  handleChange,\r\n  name,\r\n  handleClick,\r\n  value,\r\n}) {\r\n  return (\r\n    <label className=\"label\">\r\n      {title && <p className=\"title\">{title}</p>}\r\n      <input\r\n        onChange={handleChange}\r\n        onClick={handleClick}\r\n        name={name}\r\n        value={value}\r\n        className=\"input\"\r\n        type={type}\r\n        placeholder={placeholder}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  //   background-color: green;\n  .label {\n    color: grey;\n  }\n  .title {\n    font-size: 12px;\n    margin-bottom: 10px;\n  }\n  .input:placeholder {\n    color: grey;\n    text-align: right;\n    font-size: 24px;\n  }\n  .input[type=\"date\"] {\n    color: blue;\n  }\n`;\n","import LabelInput from '../_shared/labelInput/labelInput';\r\nimport { Form } from './TransactionForm.style.js';\r\nimport { postTransaction } from '../../utils/api';\r\nimport { useMainContext } from '../../context/MainProvider';\r\n\r\nconst TransactionForm = ({\r\n  openCategoriesList,\r\n  handleChange,\r\n  dataForm,\r\n  transType,\r\n}) => {\r\n  const { addTransaction, setError } = useMainContext();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    postTransaction(transType, dataForm)\r\n      .then(transaction => addTransaction({ dataForm: transaction, transType }))\r\n      .catch(error => setError(error));\r\n  };\r\n\r\n  const { date, time, category, sum, currency, comment } = dataForm;\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <button type=\"submit\">OK</button>\r\n      <LabelInput\r\n        name=\"date\"\r\n        handleChange={handleChange}\r\n        title=\"День\"\r\n        type=\"date\"\r\n        value={date}\r\n      />\r\n      <LabelInput\r\n        name=\"time\"\r\n        handleChange={handleChange}\r\n        title=\"Время\"\r\n        type=\"time\"\r\n        value={time}\r\n      />\r\n      <LabelInput\r\n        name=\"category\"\r\n        handleChange={handleChange}\r\n        title=\"Категория\"\r\n        type=\"button\"\r\n        handleClick={openCategoriesList}\r\n        value={category.title}\r\n      />\r\n      <LabelInput\r\n        name=\"sum\"\r\n        handleChange={handleChange}\r\n        title=\"Сумма\"\r\n        type=\"text\"\r\n        placeholder=\"Введите сумму\"\r\n        value={sum}\r\n      />\r\n      <LabelInput\r\n        name=\"currency\"\r\n        handleChange={handleChange}\r\n        title=\"Валюта\"\r\n        type=\"button\"\r\n        value={currency}\r\n      />\r\n      <LabelInput\r\n        name=\"comment\"\r\n        handleChange={handleChange}\r\n        type=\"text\"\r\n        placeholder=\"Коментарий\"\r\n        value={comment}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\nexport default TransactionForm;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './GoBackHeader.module.scss'\r\n\r\n\r\nfunction GoBackHeader({title,handleGoBack}) {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.wrapper}>\r\n            <button className={s.button} onClick={(e)=>handleGoBack()}>go back</button> \r\n            <h1 className={s.title}>{title}</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nGoBackHeader.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\nexport default GoBackHeader\r\n","import { useState } from 'react';\r\nimport CategoriesList from '../../CategoriesList/CategoriesList';\r\nimport TransactionForm from '../../TransactionForm/TransactionForm';\r\nimport GoBackHeader from '../../_shared/GoBackHeader/GoBackHeader';\r\nimport { useMainContext } from '../../../context/MainProvider';\r\n\r\nconst TransactionPage = ({ transType }) => {\r\n  const { toggleActivePage, categories, addCategory } = useMainContext();\r\n\r\n  const [isOpenCategories, setIsOpenCategories] = useState(false);\r\n  const [dataForm, setDataForm] = useState({\r\n    isOpenCategories: false,\r\n    date: '2021-12-10',\r\n    time: '14:53',\r\n    category: categories[0],\r\n    sum: '',\r\n    currency: 'EUR',\r\n    comment: '',\r\n  });\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    // this.setState({ [name]: value });\r\n    setDataForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const closeCategoriesList = () => {\r\n    // this.setState({ isOpenCategories: false });\r\n    setIsOpenCategories(false);\r\n  };\r\n\r\n  const openCategoriesList = () => {\r\n    // this.setState({ isOpenCategories: true });\r\n    setIsOpenCategories(true);\r\n  };\r\n\r\n  // const {\r\n  //   addCategory,\r\n  //   // closeTransactionPage,\r\n  //   addData,\r\n  //   transType,\r\n  //   categories,\r\n  //   setError,\r\n  // } = this.props;\r\n\r\n  // const { isOpenCategories, ...dataForm } = this.state;\r\n\r\n  const formTitle =\r\n    !isOpenCategories && (transType === 'costs' ? 'Расходы' : 'Доходы');\r\n\r\n  return (\r\n    <section style={{ width: '400px', margin: '0 auto' }}>\r\n      <GoBackHeader\r\n        title={isOpenCategories ? 'Категории' : formTitle}\r\n        handleGoBack={isOpenCategories ? closeCategoriesList : toggleActivePage}\r\n      />\r\n      {!isOpenCategories ? (\r\n        <TransactionForm\r\n          handleChange={handleChange}\r\n          openCategoriesList={openCategoriesList}\r\n          dataForm={dataForm}\r\n          transType={transType}\r\n          // setError={setError}\r\n        />\r\n      ) : (\r\n        <CategoriesList categories={categories} addCategory={addCategory} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default TransactionPage;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useMainContext } from '../../context/MainProvider';\r\nimport { MainPage } from '../_page/MainPage';\r\nimport TransactionPage from '../_page/TransactionPage/TransactionPage';\r\n\r\nconst App = () => {\r\n  const { activePage, error, setError } = useMainContext();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert(error);\r\n      setError(null);\r\n    }\r\n  }, [error, setError]);\r\n\r\n  return (\r\n    <>\r\n      {activePage === 'main' && <MainPage />}\r\n      {activePage === 'costs' && (\r\n        <TransactionPage\r\n          // addData={addTransaction}\r\n          // closeTransactionPage={openActivePage}\r\n          transType={'costs'}\r\n          // categories={categories}\r\n          // addCategory={addCategory}\r\n          // setError={setError}\r\n        />\r\n      )}\r\n      {activePage === 'incomes' && (\r\n        <TransactionPage\r\n          // addData={addTransaction}\r\n          // closeTransactionPage={openActivePage}\r\n          transType={'incomes'}\r\n          // categories={categories}\r\n          // addCategory={addCategory}\r\n          // setError={setError}\r\n        />\r\n      )}\r\n      {activePage === 'balance' && <h1>balance</h1>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App.jsx\";\r\nimport { MainProvider } from \"./context/MainProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainProvider>\r\n      <App />\r\n    </MainProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"GoBackHeader_header__1Oed8\",\"wrapper\":\"GoBackHeader_wrapper__3Bvxb\",\"button\":\"GoBackHeader_button__3ckX6\"};"],"sourceRoot":""}